- block:
  - name: Add postgres_exporter user
    user:
      name: postgres_exporter
      shell: /sbin/nologin

  - name: Download postgres_exporter
    get_url:
      url: "{{ postgresql_exporter_link }}"
      dest: /tmp/postgres_exporter.tar.gz
      mode: '0440'
    register: result
    until: result is success
    retries: 5
    delay: 3

  - name: Unarchive postgres_exporter
    unarchive:
      src: /tmp/postgres_exporter.tar.gz
      dest: /usr/sbin/
      owner: root
      group: root
      mode: '0755'
      remote_src: yes
      extra_opts: [--strip-components=1]

  - name: Copy the postgres_exporter unit file
    copy:
      src: postgres_exporter.service
      dest: /etc/systemd/system
      owner: root
      group: root
      mode: '0644'

  - name: Copy the postgresql environment file 
    template:
      src: templates/sysconfig.postgres_exporter.j2
      dest: /etc/default/postgres_exporter
      owner: root
      group: root
      mode: '0644'
    notify: Restart postgres_exporter service

  - name: Create postgres_exporter directory
    file:
      path: /opt/postgres_exporter
      state: directory
      owner: postgres_exporter
      group: postgres_exporter
      mode: '0755'

  - name: Copy the postgres_exporter queries file
    copy:
      src: queries.yml
      dest: /opt/postgres_exporter/
      owner: postgres_exporter
      group: postgres_exporter
      mode: '0644'
    notify: Restart postgres_exporter service

  - name: Force systemd to reread configs
    systemd:
      daemon_reload: yes

  - name: Make the postgres_exporter service enabled and started
    systemd:
      name: postgres_exporter
      enabled: yes
      state: started
      
  when: ansible_facts['os_family'] == 'Debian' and ansible_facts['architecture'] == 'x86_64'
  become: yes
